tosca_definitions_version: cloudify_dsl_1_3
imports:
  - 'http://www.getcloudify.org/spec/cloudify/4.6/types.yaml'
  - 'plugin:cloudify-awssdk-plugin'
  - install-script.yaml
description: |
  This blueprint installs an application using Cloudify on AWS.
inputs:
  aws_region_name:
    type: string
    description: 'The AWS region name, such as us-east-1 or us-west-1.'
    default: eu-central-1
  availability_zone:
    type: string
    description: The availability zone in the AWS Region.
    default:
      concat:
        - get_input: aws_region_name
        - b
  ami_owner_filter:
    type: string
    description: The AWS AMI owner number.
    default: 099720109477
  ami_name_filter:
    type: string
    description: The name of the AWS AMI in the AWS region.
    default: ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20170727
outputs:
  application_endpoint:
    description: The external endpoint of the application.
    value:
      concat:
        - 'http://'
        - get_attribute:
            - vm
            - public_ip_address
        - ':80'
node_templates:
  vm:
    type: cloudify.nodes.aws.ec2.Instances
    properties:
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
      agent_config:
        install_method: none
      resource_config:
        kwargs:
          ImageId:
            get_attribute:
              - ami
              - aws_resource_id
          InstanceType: t2.micro
          UserData:
            get_input: install_script
    relationships:
      - type: cloudify.relationships.depends_on
        target: ami
      - type: cloudify.relationships.depends_on
        target: nic
  ami:
    type: cloudify.nodes.aws.ec2.Image
    properties:
      resource_config:
        kwargs:
          Filters:
            - Name: name
              Values:
                - get_input: ami_name_filter
            - Name: owner-id
              Values:
                - get_input: ami_owner_filter
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
  ip:
    type: cloudify.nodes.aws.ec2.ElasticIP
    properties:
      resource_config:
        kwargs:
          Domain: vpc
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
    relationships:
      - type: cloudify.relationships.depends_on
        target: nic
  nic:
    type: cloudify.nodes.aws.ec2.Interface
    properties:
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
      resource_config:
        kwargs:
          Description: Created by CCDDCM-hello-world-example.
          SubnetId:
            get_attribute:
              - subnet
              - aws_resource_id
          Groups:
            - get_attribute:
                - security_group
                - aws_resource_id
    relationships:
      - type: cloudify.relationships.depends_on
        target: security_group
      - type: cloudify.relationships.depends_on
        target: subnet
  security_group_rules:
    type: cloudify.nodes.aws.ec2.SecurityGroupRuleIngress
    properties:
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
      resource_config:
        kwargs:
          IpPermissions:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              IpRanges:
                - CidrIp: 0.0.0.0/0
    relationships:
      - type: cloudify.relationships.contained_in
        target: security_group
  security_group:
    type: cloudify.nodes.aws.ec2.SecurityGroup
    properties:
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
      resource_config:
        kwargs:
          GroupName: CCDDCMHelloWorldGroup
          Description: Created by CCDDCM-hello-world-example.
          VpcId:
            get_attribute:
              - vpc
              - aws_resource_id
    relationships:
      - type: cloudify.relationships.depends_on
        target: vpc
  route_public_subnet_internet_gateway:
    type: cloudify.nodes.aws.ec2.Route
    properties:
      resource_config:
        kwargs:
          DestinationCidrBlock: 0.0.0.0/0
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
    relationships:
      - type: cloudify.relationships.contained_in
        target: routetable
      - type: cloudify.relationships.connected_to
        target: internet_gateway
    interfaces:
      cloudify.interfaces.lifecycle:
        stop: {}
  routetable:
    type: cloudify.nodes.aws.ec2.RouteTable
    properties:
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
    relationships:
      - type: cloudify.relationships.contained_in
        target: vpc
      - type: cloudify.relationships.connected_to
        target: subnet
  subnet:
    type: cloudify.nodes.aws.ec2.Subnet
    properties:
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
      resource_config:
        kwargs:
          CidrBlock: 10.10.4.0/24
          AvailabilityZone:
            get_input: availability_zone
    relationships:
      - type: cloudify.relationships.depends_on
        target: vpc
  internet_gateway:
    type: cloudify.nodes.aws.ec2.InternetGateway
    properties:
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
    relationships:
      - type: cloudify.relationships.connected_to
        target: vpc
  vpc:
    type: cloudify.nodes.aws.ec2.Vpc
    properties:
      client_config:
        aws_access_key_id:
          get_secret: aws_access_key_id
        aws_secret_access_key:
          get_secret: aws_secret_access_key
        region_name:
          get_input: aws_region_name
      resource_config:
        kwargs:
          CidrBlock: 10.10.0.0/16
dsl_definitions:
  client_config:
    aws_access_key_id:
      get_secret: aws_access_key_id
    aws_secret_access_key:
      get_secret: aws_secret_access_key
    region_name:
      get_input: aws_region_name